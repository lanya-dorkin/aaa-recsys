version: '3.8'
x-environment-defaults: &environment-defaults
  DEBUG: "True"
  SECRET_KEY: "aaa_322"
  FLASK_PORT: 8000
  POSTGRES_DB: "aaadb"
  POSTGRES_USER: "POSTGRES_USER"
  POSTGRES_PASSWORD: "POSTGRES_PASSWORD"
  POSTGRES_PORT: 5432
  POSTGRES_HOST: "postgres-db"
  REDIS_PORT: 6379
  REDIS_HOST: "redis"
  MODEL_SERVICE_HOST: "model-flask-app"
  MODEL_SERVICE_PORT: 8003

services:
  postgres-db:
    image: postgres:13-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: aaadb
      POSTGRES_USER: POSTGRES_USER
      POSTGRES_PASSWORD: POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    networks:
      - web-network
    healthcheck:
    # TODO: Well Healthcheck, need to postgres-db end configure
    # before flask-app started
      test: "exit 0"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - web-network

  flask-app:
    build:
      context: ./app
    container_name: flask-app
    tty: true
    ports:
      - "8000:8000"
    networks:
      - web-network
    depends_on:
      postgres-db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      <<: *environment-defaults
    restart: on-failure:5

  model-flask-app:
    build:
      context: ./model_service
    container_name: model_service
    tty: true
    ports:
      - "8003:8003"
    networks:
      - web-network
    environment:
      <<: *environment-defaults
    restart: on-failure:5

  locust_master:
    image: locustio/locust
    ports:
     - "8089:8089"
    volumes:
      - ./locust/locustfile.py:/mnt/locust/locustfile.py
    command: -f /mnt/locust/locustfile.py --master -H http://locust_master:8089
    networks:
      - web-network

  locust_worker:
    image: locustio/locust
    volumes:
      - ./locust/locustfile.py:/mnt/locust/locustfile.py
    command: -f /mnt/locust/locustfile.py --worker --master-host locust_master
    networks:
      - web-network

networks:
  web-network:
    driver: bridge